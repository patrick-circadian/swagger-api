openapi: 3.0.0
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/PATRICK_38/circadian_field_app/1.0.0
tags:
  - name: Authentication
  - name: Sites
  - name: Device
  - name: Audit
  - name: Profile
paths:
  /create_user:
    post:
      tags:
        - Authentication
      summary: Create a new user account
      description: This endpoint is used for creating a new user account in the admin app.
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - firstname
                - lastname
                - username
                - phone_number
                - rights
              properties:
                email:
                  type: string
                  format: email
                  example: example@example.com
                firstname:
                  type: string
                  example: John
                lastname:
                  type: string
                  example: Doe
                username:
                  type: string
                  example: johndoe
                dashboards:
                  type: array
                  items:
                    type: string
                phone_number:
                  type: string
                  example: "1234567890"
                rights:
                  type: object
                  properties:
                    can_assign_device:
                      type: boolean
                      example: true
                    can_create_device:
                      type: boolean
                      example: false
                    can_edit_device:
                      type: boolean
                      example: true
                    can_view_device:
                      type: boolean
                      example: false
                    can_create_site:
                      type: boolean
                      example: true
                    can_edit_site:
                      type: boolean
                      example: true
                    can_view_sites:
                      type: boolean
                      example: true
                    can_view_loadshedding:
                      type: boolean
                      example: true
      responses:
        '200':
          description: User account created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User account created"
        '400':
          description: Bad request - missing or invalid parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid parameters or missing required data"
        '404':
          description: Not found - resource not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Resource not found"
  /create_org:
    post:
      tags:
        - Authentication
      summary: Create a new organization account
      description: This endpoint is used for adding new organization accounts to the admin app.
      operationId: createOrganization
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - org
                - org_name
                - template_id
              properties:
                org:
                  type: string
                  example: your_org_name
                org_name:
                  type: string
                  example: Your Org Name
                template_id:
                  type: string
                  example: your_template_id
                is_sub_org:
                  type: boolean
                  example: false
                sites:
                  type: array
                  items:
                    type: string
                devices:
                  type: array
                  items:
                    type: string
                dashboards:
                  type: array
                  items:
                    type: string
                users:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: Organization account created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Organization account created"
        '400':
          description: Bad request - missing or invalid parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid parameters or missing required data"
        '404':
          description: Not found - resource not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Resource not found"
  /login:
    post:
      tags:
        - Authentication
      summary: Login to the application
      description: This endpoint is used for user login and returns a JWT token upon successful authentication.
      operationId: loginUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
                password:
                  type: string
                  example: "yourpassword"
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: "jwt_token"
        '400':
          description: Bad request - invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid email or password"
        '404':
          description: Not found - resource not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Resource not found"
  /request_password_reset:
    post:
      tags:
        - Authentication
      summary: Request password reset
      description: This endpoint is used by unauthenticated users to initiate a password reset process. A token is sent to the provided email.
      operationId: requestPasswordReset
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
      responses:
        '200':
          description: Reset token sent to email
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Reset token sent to your email address."
        '400':
          description: Bad request - missing or invalid parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid email address provided"
        '404':
          description: Not found - user not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User not found"
  /submit_password_reset:
    post:
      tags:
        - Authentication
      summary: Submit password reset
      description: This endpoint allows users to submit their new password along with the reset token they received via email to complete the password reset process.
      operationId: submitPasswordReset
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - token
                - new_password
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
                token:
                  type: string
                  example: "received_reset_token"
                new_password:
                  type: string
                  example: "new_secure_password"
      responses:
        '200':
          description: Password reset successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Your password has been reset successfully."
        '400':
          description: Bad request - missing or invalid parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid email, token, or new password"
        '404':
          description: Not found - user or token not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User or token not found"
  /create_site:
    post:
      tags:
        - Sites
      summary: Create a new site
      description: This endpoint is used by a user to create a new site.
      operationId: createSite
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - lon
                - lat
                - site
                - site_name
                - org
                - timezone
                - timezone_offset
                - auto_region
                - device
                - meta_template
                - business_open
                - business_close
                - weekend
                - meta_data
              properties:
                lon:
                  type: number
                  format: double
                  example: 0.0
                lat:
                  type: number
                  format: double
                  example: 0.0
                site:
                  type: string
                  example: your_site_id
                site_name:
                  type: string
                  example: Your Site Name
                org:
                  type: string
                  example: your_org_id
                timezone:
                  type: string
                  example: Your Timezone
                timezone_offset:
                  type: integer
                  example: 3600
                auto_region:
                  type: string
                  example: Your Auto Region
                device:
                  type: string
                  example: your_device_id
                meta_template:
                  type: string
                  example: your_template_id
                business_open:
                  type: boolean
                  example: false
                business_close:
                  type: boolean
                  example: false
                weekend:
                  type: string
                  example: 'Sunday'
                meta_data:
                  type: string
                  example: your_site_meta_data
      responses:
        '200':
          description: Site created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  site_id:
                    type: string
                    description: The MongoDB _id of the created site
                    example: "unique_site_id"
                  message:
                    type: string
                    example: "Site created successfully"
        '400':
          description: Bad request - missing or invalid parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid parameters or missing required data"
        '404':
          description: Not found - resource not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Resource not found"
  /update_site:
    patch:
      tags:
        - Sites
      summary: Update an existing site
      description: This endpoint is used for editing any of the fields provided in the site document. The site MongoDB _id is required to update the correct document.
      operationId: updateSite
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - _id
              properties:
                _id:
                  type: string
                  description: MongoDB ObjectID of the site to update
                  example: "mongodb_objectid"
                lon:
                  type: number
                  format: double
                  example: 0.0
                lat:
                  type: number
                  format: double
                  example: 0.0
                timezone:
                  type: string
                  example: Your Timezone
                timezone_offset:
                  type: integer
                  example: 3600
                auto_region:
                  type: string
                  example: Your Auto Region
                device:
                  type: string
                  example: your_device_id
                business_open:
                  type: boolean
                  example: false
                business_close:
                  type: boolean
                  example: false
                weekend:
                  type: string
                  example: 'Sunday'
      responses:
        '200':
          description: Site updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Site updated successfully"
        '400':
          description: Bad request - missing or invalid parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid parameters or missing required data"
        '404':
          description: Not found - site not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Site not found"
  /fetch_sites:
    get:
      tags:
        - Sites
      summary: Fetch a list of all sites
      description: This endpoint fetches a list of all sites owned by the particular organization that the user belongs to. The organization ID is passed alongside the request.
      operationId: fetchSites
      parameters:
        - name: org_id
          in: query
          description: The MongoDB ObjectID of the organization to fetch sites for.
          required: true
          schema:
            type: string
            example: "your_org_id"
      responses:
        '200':
          description: List of sites retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required:
                    - _id
                    - site
                    - site_name
                    - org
                    - timezone
                    - timezone_offset
                    - auto_region
                    - device
                    - meta_template
                    - business_open
                    - business_close
                    - weekend
                  properties:
                    _id:
                      type: string
                      example: "your_id"
                    lon:
                      type: number
                      format: double
                      example: 0.0
                    lat:
                      type: number
                      format: double
                      example: 0.0
                    site:
                      type: string
                      example: "your_site_id"
                    site_name:
                      type: string
                      example: "Your Site Name"
                    org:
                      type: string
                      example: "your_org_id"
                    timezone:
                      type: string
                      example: "Your Timezone"
                    timezone_offset:
                      type: integer
                      example: 1800
                    auto_region:
                      type: string
                      example: "Your Auto Region"
                    device:
                      type: string
                      example: "your_device_id"
                    meta_template:
                      type: string
                      example: "your_template_id"
                    business_open:
                      type: boolean
                      example: false
                    business_close:
                      type: boolean
                      example: false
                    weekend:
                      type: string
                      example: 'Sunday'
        '400':
          description: Bad request - missing or invalid parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid parameters or missing required data"
        '404':
          description: Not found - organization not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Organization not found"
  /delete_site:
    delete:
      tags:
        - Sites
      summary: Delete a site
      description: This endpoint deletes a specific site by its MongoDB _id. The site _id is required to delete the correct document.
      operationId: deleteSite
      parameters:
        - name: site_id
          in: query
          description: The MongoDB _id of the site to be deleted.
          required: true
          schema:
            type: string
            example: "site_mongodb_id"
      responses:
        '200':
          description: Site deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Site deleted successfully"
        '400':
          description: Bad request - invalid site ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid site ID"
        '404':
          description: Not found - site not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Site not found"
  /create_meta_template:
    post:
      tags:
        - Sites
      summary: Create a new meta template
      description: This endpoint is used by an organization to create a new meta template for their site. It accepts a dynamic JSON object and stores it in the meta_template collection.
      operationId: createMetaTemplate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
              example: { "template_name": "Example Template", "fields": { "field1": "value1", "field2": "value2" } }
      responses:
        '200':
          description: Meta template created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Meta template created successfully"
        '400':
          description: Bad request - missing or invalid parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid parameters or missing required data"
        '404':
          description: Not found - resource not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Resource not found"
  /fetch_meta_templates:
    get:
      tags:
        - Sites
      summary: Fetch all meta templates
      description: This endpoint fetches a list of all meta templates created by an organization. It returns a list of dynamic JSON objects stored in the meta_template collection.
      operationId: fetchMetaTemplates
      parameters:
        - name: org_id
          in: query
          description: The MongoDB ObjectID of the organization to fetch meta templates for.
          required: true
          schema:
            type: string
            example: "your_org_id"
      responses:
        '200':
          description: List of meta templates retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  additionalProperties: true
                  example: { "template_id": "unique_template_id", "template_name": "Example Template", "fields": { "field1": "value1", "field2": "value2" } }
        '400':
          description: Bad request - missing or invalid parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid parameters or missing required data"
        '404':
          description: Not found - organization not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Organization not found"
  /register_device:
    post:
      tags:
        - Device
      summary: Register a new device
      description: This endpoint is used for registering a new IoT device obtained by an organization. The device can be registered using the device ID and then assigned to a site.
      operationId: registerDevice
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - short_id
                - assigned
                - owner
                - device_type
                - hw_version
                - sw_version
                - ts_id
              properties:
                id:
                  type: string
                  example: "your_cortex_id"
                short_id:
                  type: string
                  example: "your_short_id"
                assigned:
                  type: boolean
                  example: false
                owner:
                  type: string
                  example: "your_org_id"
                device_type:
                  type: string
                  example: "your_device_type"
                hw_version:
                  type: number
                  format: double
                  example: 1.0
                sw_version:
                  type: number
                  format: double
                  example: 1.0
                ts_id:
                  type: string
                  nullable: true
                  example: null
      responses:
        '200':
          description: Device registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Device registered successfully"
        '400':
          description: Bad request - missing or invalid parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid parameters or missing required data"
        '404':
          description: Not found - organization not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Organization not found"
  /fetch_devices:
    get:
      tags:
        - Device
      summary: Fetch all devices
      description: This endpoint retrieves a list of devices created by an organization. It uses the organization ID passed in the request to filter the devices.
      operationId: fetchDevices
      parameters:
        - name: org_id
          in: query
          description: The MongoDB ObjectID of the organization to fetch devices for.
          required: true
          schema:
            type: string
            example: "your_org_id"
      responses:
        '200':
          description: List of devices retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required:
                    - id
                    - short_id
                    - assigned
                    - owner
                    - device_type
                    - hw_version
                    - sw_version
                    - ts_id
                  properties:
                    id:
                      type: string
                      example: "your_cortex_id"
                    short_id:
                      type: string
                      example: "your_short_id"
                    assigned:
                      type: boolean
                      example: false
                    owner:
                      type: string
                      example: "your_org_id"
                    device_type:
                      type: string
                      example: "your_device_type"
                    hw_version:
                      type: number
                      format: double
                      example: 1.0
                    sw_version:
                      type: number
                      format: double
                      example: 1.0
                    ts_id:
                      type: string
                      nullable: true
                      example: null
        '400':
          description: Bad request - missing or invalid parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid parameters or missing required data"
        '404':
          description: Not found - organization not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Organization not found"
  /delete_device:
    delete:
      tags:
        - Device
      summary: Delete a device
      description: This endpoint deletes a specific device by its MongoDB _id. The device _id is required to delete the correct document.
      operationId: deleteDevice
      parameters:
        - name: device_id
          in: query
          description: The MongoDB _id of the device to be deleted.
          required: true
          schema:
            type: string
            example: "device_mongodb_id"
      responses:
        '200':
          description: Device deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Device deleted successfully"
        '400':
          description: Bad request - invalid device ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid device ID"
        '404':
          description: Not found - device not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Device not found"
  /fetch_device_template:
    get:
      tags:
        - Device
      summary: Fetch device template information
      description: This endpoint fetches generic information required for creating new devices. It applies to all organizations across the project.
      operationId: fetchDeviceTemplate
      responses:
        '200':
          description: Device template information retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  cortex_hardware:
                    type: array
                    items:
                      type: string
                    example: ["hardware_1", "hardware_2"]
                  cortex_software:
                    type: array
                    items:
                      type: string
                    example: ["software_1", "software_2"]
                  cortex_mqtt_id:
                    type: array
                    items:
                      type: string
                    example: ["mqtt_id_1", "mqtt_id_2"]
                  cortex_model:
                    type: array
                    items:
                      type: string
                    example: ["model_1", "model_2"]
  /unassign_device:
    post:
      tags:
        - Sites
      summary: Unassign a device from a site
      description: This endpoint will remove the device associated with the site and set the 'assigned' boolean in the device document to false. It requires the site_id, reads the site document to get the device_id, then unassigns the device.
      operationId: unassignDevice
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - site_id
              properties:
                site_id:
                  type: string
                  description: The MongoDB _id of the site from which the device is to be unassigned.
                  example: "site_mongodb_id"
      responses:
        '200':
          description: Device unassigned successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Device unassigned successfully"
        '400':
          description: Bad request - invalid site ID or missing site ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid or missing site ID"
        '404':
          description: Not found - site not found or device not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Site or device not found"
components:
  securitySchemes:
    jwt_auth:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: http://example.com/oauth/authorize
          tokenUrl: http://example.com/oauth/token
          scopes: {}
security:
  - jwt_auth: []
info:
  description: This is the endpoint documentation for the Circadian Field and Admin app
  version: 1.0.0
  title: Circadian Field App
  contact:
    name: Patrick Olarewaju
    email: patrick@circadian.io
